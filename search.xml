<?xml version="1.0" encoding="utf-8"?>
<search>
  <entry>
    <title><![CDATA[无阻塞加载js文件]]></title>
    <url>%2F2018%2F12%2F19%2Fhpjavascript1%2F</url>
    <content type="text"><![CDATA[代码11&lt;script type=&quot;text/javascript&quot; src=&quot;file1.js&quot;&gt;&lt;/script&gt; 代码2 1234var script = document.createElement(&quot;script&quot;);script.type = &quot;text/javascript&quot;;script.src = &quot;file1.js&quot;document.getElementsByTagName(&quot;head&quot;)[0].appendChild(script);== 代码1与代码2的异同： 代码1在执行过程中，文件下载后会立刻执行，堵塞页面的其他进程（如其他下载进程） 代码2在执行过程中，文件下载和执行过程不会堵塞页面的其他进程，直到DOM加载完成，因此该方法可以与其他资源并行下载 有多种无堵塞下载JavaScript的方法： 使用标签的defer属性 使用动态创建的元素来下载并执行代码 使用XHR对象下载JavaScript代码并注入页面中 以上三种方法各有缺点：1-1). 支持的浏览器较少2-1). IE内核浏览器需要额外处理3-1). 不支持CDN下载]]></content>
      <categories>
        <category>javascript</category>
      </categories>
      <tags>
        <tag>高性能JavaScript</tag>
        <tag>无堵塞加载</tag>
      </tags>
  </entry>
</search>
